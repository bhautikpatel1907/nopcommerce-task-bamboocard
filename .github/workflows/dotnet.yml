# This workflow will build a NopCommerce v4.80 .NET v9.0-based project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Deploy bamboo NopCommerce

on:
  workflow_dispatch: # Manual trigger

permissions:
  contents: read

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Wait for GitHub Release to be created
        run: Start-Sleep -Seconds 5
        
      - name: Download Latest Release Artifact
        uses: robinraju/release-downloader@v1.8
        with:
          repository: ${{ github.repository }}
          latest: true
          fileName: "nopcommerce-release.zip"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean Existing Extract Folder
        run: Remove-Item -Path deployed_output -Recurse -Force -ErrorAction SilentlyContinue
      
      - name: Extract Artifact
        run: Expand-Archive -Path nopcommerce-release.zip -DestinationPath deployed_output -Force

      - name: Deploy to IIS
        shell: powershell
        run: |
          $iisPath = "C:\inetpub\wwwroot\bamboo-git\published_output"
          $siteName = "baamboo-git"
          $appPoolName = "baamboo-git"
          $appcmdPath = "$env:SystemRoot\System32\inetsrv\appcmd.exe"

          if (Test-Path $appcmdPath) {
            & $appcmdPath stop apppool /apppool.name:$appPoolName
            & $appcmdPath stop site /site.name:$siteName
          }

          if (!(Test-Path $iisPath)) {
            New-Item -ItemType Directory -Path $iisPath | Out-Null
          }

          Get-ChildItem -Path $iisPath | Where-Object {
            $_.Name -notin @(
              "App_Data",
              "wwwroot",
              "Logs",
              "web.config"
            )
          } | ForEach-Object {
            try {
              Remove-Item -Path $_.FullName -Recurse -Force -ErrorAction Stop
            } catch {
              Write-Host "Skipping locked file: $($_.FullName)"
            }
          }

          Copy-Item -Path "deployed_output\published_output\*" -Destination $iisPath -Recurse -Force

          if (Test-Path $appcmdPath) {
            & $appcmdPath start apppool /apppool.name:$appPoolName
            & $appcmdPath start site /site.name:$siteName
          }
