# This workflow will build a NopCommerce v4.80 .NET v9.0-based project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: 
      - dev       # ðŸ”„ Run on feature/active development
      - main      # âœ… Run when PR is merged into main
  #pull_request:
   # branches: 
    #  - main      # ðŸ§ª Run when PR targets main

permissions:
  contents: write # âœ… ADD THIS BLOCK to give the workflow permission to write to releases
  
jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Restore dependencies
      run: dotnet restore src/NopCommerce.sln

    - name: Build
      run: dotnet build src/NopCommerce.sln --configuration Release

    # - name: Run Tests (optional)
    #   run: dotnet test src/NopCommerce.sln
    #   continue-on-error: true

  release:
    needs: build
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Publish Project
        run: dotnet publish src/Presentation/Nop.Web/Nop.Web.csproj -c Release -o published_output
    
      - name: Zip Published Output
        run: zip -r nopcommerce-release.zip published_output/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: Release ${{ github.run_number }}
          body: "Auto release generated from CI"
          files: nopcommerce-release.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: release
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'

    steps:

      - name: Download Release Artifact
        uses: marvinpinto/action-download-release-asset@v1.1.3
        with:
          repo: ${{ github.repository }}
          tag: v${{ github.run_number }}
          file: nopcommerce-release.zip
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Artifact
        run: Expand-Archive -Path nopcommerce-release.zip -DestinationPath deployed_output

      - name: Deploy to IIS
        shell: powershell
        run: |
          $iisPath = "C:\inetpub\wwwroot\bamboo-git"

          # Ensure destination exists
          if (!(Test-Path $iisPath)) {
            New-Item -ItemType Directory -Path $iisPath | Out-Null
          }

          # Remove all except critical folders/files
          Get-ChildItem -Path $iisPath | Where-Object {
            $_.Name -notin @("App_Data", "appsettings.json", "plugins.json", "wwwroot")
          } | Remove-Item -Recurse -Force

          # Copy new release files
          Copy-Item -Path "deployed_output\*" -Destination $iisPath -Recurse -Force
