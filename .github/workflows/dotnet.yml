# This workflow will build a NopCommerce v4.80 .NET v9.0-based project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: NopComv4.80-bamboo .NET CI/CD Pipeline

on:
  push:
    branches: 
      - dev       # ðŸ”„ Run on feature/active development
      - main      # âœ… Run when PR is merged into main
  #pull_request:
   # branches: 
    #  - main      # ðŸ§ª Run when PR targets main

permissions:
  contents: write 

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Restore dependencies
      run: dotnet restore src/NopCommerce.sln

    - name: Build
      run: dotnet build src/NopCommerce.sln --configuration Release

    # - name: Run Tests (optional)
    #   run: dotnet test src/NopCommerce.sln
    #   continue-on-error: true
    
    - name: Publish Project
      run: dotnet publish src/Presentation/Nop.Web/Nop.Web.csproj -c Release -o published_output

    - name: Upload Published Output
      uses: actions/upload-artifact@v4
      with:
        name: published_output
        path: published_output/
        
  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download Published Output
        uses: actions/download-artifact@v4
        with:
          name: published_output
          path: published_output
    
      - name: Zip Published Output
        run: zip -r nopcommerce-release.zip published_output/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: Release ${{ github.run_number }}
          body: "Auto release generated from CI"
          files: nopcommerce-release.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  deploy:
    needs: release
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Wait for GitHub Release to be created
        run: Start-Sleep -Seconds 5
        
      - name: Download Latest Release Artifact
        uses: robinraju/release-downloader@v1.8
        with:
          repository: ${{ github.repository }}
          latest: true
          fileName: "nopcommerce-release.zip"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean Existing Extract Folder
        run: Remove-Item -Path deployed_output -Recurse -Force -ErrorAction SilentlyContinue
      
      - name: Extract Artifact
        run: Expand-Archive -Path nopcommerce-release.zip -DestinationPath deployed_output -Force

      - name: Deploy to IIS
        shell: powershell
        run: |
          $iisPath = "C:\inetpub\wwwroot\bamboo-git\published_output"
          $siteName = "baamboo-git"
          $appPoolName = "baamboo-git"

          # Stop IIS Site and App Pool (forcefully)
          Stop-WebSite -Name $siteName -ErrorAction SilentlyContinue
          Stop-WebAppPool -Name $appPoolName -ErrorAction SilentlyContinue

          # Kill lingering w3wp.exe processes (if any)
          Get-Process -Name "w3wp" -ErrorAction SilentlyContinue | Stop-Process -Force

          # Wait to ensure processes release locks
          Start-Sleep -Seconds 5

          # Clear target dir (except critical files)
          $exclude = @("App_Data", "wwwroot", "Logs", "web.config")
          Get-ChildItem -Path $iisPath | Where-Object { $exclude -notcontains $_.Name } | Remove-Item -Recurse -Force -ErrorAction SilentlyContinue

          # Deploy new files
          Copy-Item -Path "deployed_output\published_output\*" -Destination $iisPath -Recurse -Force

          # Restart IIS
          Write-Host "Restarting IIS..."
          Start-WebAppPool -Name $appPoolName
          Start-WebSite -Name $siteName
          Write-Host "Deployment successful!"
